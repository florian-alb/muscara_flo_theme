{% assign bundle_1 = product.metafields.flo_product_bundle.product_bundle_1.value %}
<form id="bundle-form">
  <div class="flo_bundles">
    {% for metaobject in bundle_1 %}
      {% assign quantity = metaobject.variant_quantity | times: 1 %}
      {% for product_quantity in (1..quantity) %}
        <div class="flo_bundles_offer_selector">
          <span class="custom_bundle_product_handle">
            {{ metaobject.product_title.value }}
            {% if forloop.length > 1 %}{{ forloop.index }}{% endif %}
          </span>

          <select class="custom_select" name="id">
            {% for variant in metaobject.product_variants.value %}
              {% if variant.available %}
                <option value="{{ variant.id }}">
                  {{ variant.title }}
                </option>
              {% endif %}
            {% endfor %}
          </select>
        </div>
      {% endfor %}
    {% endfor %}
  </div>

  <button type="submit" id="add-bundle-button">Add Bundle to Cart</button>
  v-3
</form>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const bundleForm = document.getElementById('bundle-form');
    bundleForm.addEventListener('submit', async function (event) {
      event.preventDefault();

      const formData = new FormData(event.target);
      const itemsToAdd = formData.getAll('id').map((id) => ({ id, quantity: 1 }));

      try {
        // Ajout des articles au panier via l'API AJAX de Shopify
        const addResponse = await fetch('/cart/add.js', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ items: itemsToAdd }),
        });

        if (!addResponse.ok) {
          throw new Error(`Erreur lors de l'ajout des articles : ${addResponse.statusText}`);
        }
        console.log('‚úÖ Articles ajout√©s avec succ√®s.');

        // R√©cup√©ration des donn√©es mises √† jour du panier
        const cartResponse = await fetch(`${theme.routes.cart_url}?section_id=api-cart-items`);

        if (!cartResponse.ok) {
          throw new Error(`Erreur lors de la r√©cup√©ration des donn√©es du panier : ${cartResponse.statusText}`);
        }

        const cartHTML = await cartResponse.text();
        const element = document.createElement('div');
        element.innerHTML = cartHTML;

        // Open the cart drawer
        const cartDrawerBtn = document.querySelector(
          'a.site-nav__link.site-nav__link--icon.cart-link.js-drawer-open-button-right'
        );
        if (cartDrawerBtn) cartDrawerBtn.click();

        console.log('üöÄ ~ element:', element);

        // get drawer
        const cartDrawerItems = document.querySelectorAll('.cart__item');
        console.log('üöÄ ~ cartDrawerItems:', cartDrawerItems);

        console.log('üîß √âl√©ment cr√©√© √† partir du HTML r√©cup√©r√©.', element);
      } catch (error) {
        console.error('‚ùå Erreur lors de la mise √† jour du panier :', error);
      }
    });

    if (typeof CartDrawer !== 'undefined') {
      console.log('CartDrawer est disponible');
      const cartDrawer = new CartDrawer();
      cartDrawer.getCart(); // Appelle la m√©thode getCart
    } else {
      console.error("CartDrawer n'est pas d√©fini.");
    }
    
  });
</script>

{% style %}
  .flo_bundles {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .flo_bundles_offer_slector {
    border: 2px solid #de9fc2;
    border-radius: 5px;
    background-color: #f7e2ed;
    margin-top: 5px;
    padding: 0 10px;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .custom_select {
    line-height: 23px;
    position: static;
    opacity: 1;
    display: block;
    background-position: right 10px center !important;
    border-radius: 3px;
    border: 1px solid #000;
    font-size: 16px;
    float: left;
    width: 200px;
    min-height: 25px;
    height: 25px;
    padding: 0 25px 0 3px;
    margin: 0;
    color: #000;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .custom_bundle_product_handle {
  }
{% endstyle %}
